# 1. Поработайте с переменными, создайте несколько,
# выведите на экран, запросите у пользователя несколько
# чисел и строк и сохраните в переменные, выведите на экран.

print('# 1.')
print('Enter something:')
a = input()
print('Enter something again:')
b = input()
print(f'You entered {a} and {b}')

# 2. Пользователь вводит время в секундах.
# Переведите время в часы, минуты и секунды и выведите
# в формате чч:мм:сс. Используйте форматирование строк.

print('\n# 2.')
print('Enter a number of seconds:')
t = int(input())
h = t // 3600
t -= h * 3600
m = t // 60
t -= m * 60
print('{:02d}:{:02d}:{:02d}'.format(h, m, t))


# 3. Узнайте у пользователя число n. Найдите сумму чисел n + nn + nnn.
# Например, пользователь ввёл число 3. Считаем 3 + 33 + 333 = 369.

c = int(input('# 3. \nEnter a number n: \n'))
n, r = 3, [str(c)]
for _ in range(n - 1):
    r.append(str(c) + r[-1])
print('n + nn + nnn = ', sum(list(map(int, r))))


# 4. Пользователь вводит целое положительное число.
# Найдите самую большую цифру в числе. Для решения используйте цикл while и арифметические операции.

d = str(int(input('# 4. \nEnter a natural number n: \n')))
d_max = 0
i = 0
while i < len(d):
    if int(d[i]) > d_max:
        d_max = int(d[i])
    i += 1
print(f'max digit: {d_max}')


# 5. Запросите у пользователя значения выручки и издержек фирмы.
# Определите, с каким финансовым результатом работает фирма (прибыль — выручка больше издержек,
# или убыток — издержки больше выручки). Выведите соответствующее сообщение.
# Если фирма отработала с прибылью, вычислите рентабельность выручки (соотношение прибыли к выручке).
# Далее запросите численность сотрудников фирмы и определите прибыль фирмы в расчете на одного сотрудника.

proceeds = float(input('# 5. \nВыручка: \n'))
costs = float(input('Издержки: \n'))
print(('Фирма работает в убыток', 'Фирма приносит прибыль')[proceeds > costs])
if proceeds > costs:
    efficiency = 1 - costs / proceeds
    print('Прибыльность = ', "{:.2f}".format(efficiency))
    c = int(input('Число сотрудников:\n'))
    if c:
        print('Прибыль фирмы в расчете на одного сотрудника: ', "{:.2f}".format((proceeds - costs) / c))
    else:
        print('Число сотрудников = 0')


# 6. Спортсмен занимается ежедневными пробежками. В первый день его результат составил a километров.
# Каждый день спортсмен увеличивал результат на 10 % относительно предыдущего. Требуется определить номер дня,
# на который общий результат спортсмена составить не менее b километров. Программа должна принимать
# значения параметров a и b и выводить одно натуральное число — номер дня.

print('# 6.')
a, b = int(input('Количество километров в первый день:\n')),  int(input('Целевое количество километров:\n'))
d = 1
while b > a:
    a *= 1.1
    d += 1
    # print(d, a)
print(f'на {d}-й день спортсмен достиг результата — не менее {b} км.')

